#!/usr/bin/env python
"""
DESCRIPTION:

SUBSCRIBERS:
"""

from __future__ import division
import rospy
import numpy as np
from mini_ros.msg import IMUdata, ContactData

import sys

import rospkg
rospack = rospkg.RosPack()

sys.path.append(rospack.get_path('mini_ros') + '/../')

sys.path.append('../../')

from spot_real.Control.RPi.lib.Teensy_Interface import TeensyInterface


class SensorInterface():
    def __init__(self):

        rospy.init_node('SensorInterface', anonymous=True)
        self.TI = TeensyInterface()
        self.imu_pub = rospy.Publisher('spot/imu', IMUdata, queue_size=1)
        self.cnt_pub = rospy.Publisher('spot/contact',
                                       ContactData,
                                       queue_size=1)

    def read_sensors(self):
        """ Reads IMU and Contact Sensor data from Teensy 4.0
            and publishes to respective topics
        """
        while not rospy.is_shutdown():
            rospy.loginfo("TRYING")
            data = self.TI.read_buffer()

            rospy.loginfo(data)

            imu_dat = IMUdata
            imu_read = False
            cnt_dat = ContactData
            cnt_read = False

            msg = data.split(",")
            if len(msg) == 8:
                # IMU
                imu_dat.roll = float(msg[0])
                imu_dat.pitch = float(msg[1])
                imu_dat.acc_x = float(msg[2])
                imu_dat.acc_y = float(msg[3])
                imu_dat.acc_z = float(msg[4])
                imu_dat.gyro_x = float(msg[5])
                imu_dat.gyro_y = float(msg[6])
                imu_dat.gyro_z = float(msg[7])
                imu_read = True

            elif len(msg) == 4:
                # Contact Sensor
                cnt_dat.FL = bool(msg[0])
                cnt_dat.FR = bool(msg[1])
                cnt_dat.BL = bool(msg[2])
                cnt_dat.BR = bool(msg[3])
                cnt_read = True

            if imu_read:
                self.imu_pub.publish(imu_dat)
                rospy.loginfo("IMU")
            if cnt_read:
                self.cnt_pub.publish(cnt_dat)
                rospy.loginfo("CONTACT")


def main():
    """ The main() function. """
    si = SensorInterface()
    # rate = rospy.Rate(1.0 / 60.0)
    while not rospy.is_shutdown():
        si.read_sensors()
        # rate.sleep()
        rospy.spin()


if __name__ == '__main__':
    try:
        main()
    except rospy.ROSInterruptException:
        pass